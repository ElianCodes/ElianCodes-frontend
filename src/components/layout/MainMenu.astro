---
import PickColor from './PickColor';

interface Props {
    color: boolean;
};

const { color } = Astro.props as Props;
---
<div class={color ? "use-color" : "use-color xl:text-white dark:text-gray-900"}>
    <div class="hidden absolute text-right top-8 right-8 xl:top-12 xl:right-12 text-3xl md:flex flex-row-reverse gap-8">
        <button id="navigationButton" type="button" title="open the menu">üçî</button>
        <nav role="navigation" id="navigation" class="hidden transition-all ease-in-out duration-300" role="menu" aria-expanded="false">
            <ul class="flex gap-8">
                <li><a title="to the home page" href="/">Home</a></li>
                <li><a title="to the blog" href="/blog/">Blog</a></li>
            </ul>
        </nav>
        <PickColor client:idle />
    </div>
    <div class="absolute text-right top-8 right-8 xl:top-12 xl:right-12 text-3xl flex md:hidden flex-row-reverse gap-8">
        <button id="mobileMenuOpenButton" type="button" title="open the menu">üçî</button>
    </div>
    <nav role="navigation" id="mobileNavigation" class="hidden lg:hidden transition-all ease-in-out duration-300 w-screen h-screen text-black dark:text-white bg-white dark:bg-black absolute left-0 top-0 p-8" role="menu" aria-expanded="false">
        <p class="font-medium text-3xl">Elian Codes</p>
        <div class="absolute text-right top-8 right-8 xl:top-12 xl:right-12 text-3xl flex md:hidden flex-row-reverse gap-8">
            <button id="mobileMenuCloseButton" type="button" title="close the menu">üçï</button>
        </div>
        <ul class="flex flex-col gap-4 pt-8 self-center justify-center items-center">
            <li class="text-2xl"><a title="to the home page" href="/">Home</a></li>
            <li class="text-2xl"><a title="to the blog" href="/blog/">Blog</a></li>
            <li class="text-2xl"><a title="to the events page" href="/events/">Events</a></li>
        </ul>
    </nav>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    if('color' in localStorage) {
        const clearColor = document.getElementById('clearColor')
        clearColor.classList.remove('hidden')
    }
    const navigation = document.getElementById('navigation')
    const button = document.getElementById('navigationButton')
    const mobileMenuOpenButton = document.getElementById('mobileMenuOpenButton')
    const mobileMenuCloseButton = document.getElementById('mobileMenuCloseButton')
    const mobileNavigation = document.getElementById('mobileNavigation')
    const openMenu = () => {
        navigation.classList.remove('hidden')
        button.setAttribute('title', 'close the menu')
        button.innerHTML = 'üçï'
        navigation.setAttribute('aria-expanded', 'true')
    }
    const closeMenu = () => {
        navigation.classList.add('hidden')
        button.setAttribute('title', 'open the menu')
        button.innerHTML = 'üçî'
        navigation.setAttribute('aria-expanded', 'false')
    }
    button.addEventListener('click', e => {
        e.preventDefault()
        navigation.getAttribute('aria-expanded') == 'false' ? openMenu() : closeMenu()
    })
    mobileMenuOpenButton.addEventListener('click', e => {
        e.preventDefault()
        mobileNavigation.classList.remove('hidden')
    })
    mobileMenuCloseButton.addEventListener('click', e => {
        e.preventDefault()
        mobileNavigation.classList.add('hidden')
    })
})
</script>
